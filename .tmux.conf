# vim style tmux config

# use C-a, since it's on the home row and easier to hit than C-b
set-option -g prefix C-a
unbind-key C-a
bind-key C-a send-prefix
set -g base-index 1

# Easy config reload
bind-key R source-file $HOME/.config/dotfiles/.tmux.conf \; display-message "$HOME/.config/dotfiles/.tmux.conf reloaded Successfully."

# vi is good
setw -g mode-keys vi

# mouse behavior
setw -g mouse on

set-option -g default-terminal screen-256color

bind-key : command-prompt
# bind-key r refresh-client
bind r command-prompt "rename-window %%"
bind-key L clear-history

bind-key space next-window
bind-key bspace previous-window
bind-key enter next-layout

# use vim-like keys for splits and windows
bind-key v split-window -h
bind-key s split-window -v
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# # smart pane switching with awareness of vim splits
# bind -n C-H run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-H) || tmux select-pane -L"
# bind -n C-J run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-J) || tmux select-pane -D"
# bind -n C-K run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-K) || tmux select-pane -U"
# bind -n C-L run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-L) || tmux select-pane -R"
# bind -n 'C-\' run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys 'C-\\') || tmux select-pane -l"
# bind C-l send-keys 'C-l'

bind-key C-o rotate-window

bind-key + select-layout main-horizontal
bind-key = select-layout main-vertical

# set-window-option -g other-pane-height 45
# set-window-option -g other-pane-width 80
# set-window-option -g display-panes-time 1500
# set-window-option -g window-status-current-style fg=magenta

bind-key a last-pane
bind-key q display-panes
bind-key c new-window            #create new window <C-a>c default in $PWD 
bind ^C new-window -c "$HOME"    #create new window <C-a><C-c> default in $HOME dir
# bind-key t next-window
# bind-key T previous-window

bind-key [ copy-mode
bind-key ] paste-buffer

# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Status Bar
# set-option -g status-interval 1
# set-option -g status-style bg=black
# set-option -g status-style fg=white
# set -g status-left '#[fg=green]#H #[default]'
# set -g status-right '%a%l:%M:%S %p#[default] #[fg=blue]%Y-%m-%d'
#
# set-option -g pane-active-border-style fg=yellow
# set-option -g pane-border-style fg=cyan

# Set window notifications
# setw -g monitor-activity on
# set -g visual-activity on
#
# Enable native Mac OS X copy/paste
set-option -g default-command "/bin/bash -c 'which reattach-to-user-namespace >/dev/null && exec reattach-to-user-namespace $SHELL -l || exec $SHELL -l'"

# Allow the arrow key to be used immediately after changing windows
set-option -g repeat-time 0

bind-key Escape copy-mode			# enter copy mode; default [
# bind-key p paste-buffer				# paste; (default hotkey: ] )
bind-key P choose-buffer 			# tmux clipboard history
bind-key + delete-buffer \; display-message "Deleted current Tmux Clipboard History"

# Send To Tmux Clipboard or System Clipboard
bind-key < run-shell "tmux set-buffer -- \"$(xsel -o -b)\"" \; display-message "Copy To Tmux Clipboard"
bind-key > run-shell 'tmux show-buffer | xsel -i -b' \; display-message "Copy To System Clipboard"


  bind-key -T copy-mode-vi v send-keys -X begin-selection
  bind-key -T copy-mode-vi V send-keys -X select-line
  bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe "xclip -in -selection clipboard"; \
  bind-key -T copy-mode-vi y send-keys -X copy-pipe "xclip -in -selection clipboard"

set -ga terminal-overrides ',xterm-256color:Tc'
set-option -sa terminal-overrides ",xterm*:Tc"

# -----------------------------------------------------------------------------
# Plugin Manager - https://github.com/tmux-plugins/tpm
# If you didn't use my dotfiles install script you'll need to:
#   Step 1) git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
#   Step 2) Reload tmux if it's already started with `r
#   Step 3) Launch tmux and hit `I (capital i) to fetch any plugins
# -----------------------------------------------------------------------------

# List of plugins.
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'dreamsofcode-io/catppuccin-tmux'
set -g @plugin 'omerxx/tmux-sessionx'

# ------------------tmux-sessionx CONFIG --------------------------------------------------
# Plugin tmux-sessionx
# I recommend using `o` if not already in use, for least key strokes when launching
# set -g @sessionx-bind '<mykey>'

# `C-x` is a customizeable, by default it indexes directories in `$HOME/.config`,
# but this can be changed by adding the config below.
# e.g. set -g @sessionx-x-path '~/dotfiles'
# set -g @sessionx-x-path '<some-path>'

# A comma delimited absolute-paths list of custom paths
# always visible in results and ready to create a session from.
# Tip: if you're using zoxide mode, there's a good chance this is redundant
# set -g @sessionx-custom-paths '/Users/me/projects,/Users/me/second-brain'

# By default, the current session will not be shown on first view
# This is to support quick switch of sessions
# Only after other actions (e.g. rename) will the current session appear
# Setting this option to 'false' changes this default behavior
# set -g @sessionx-filter-current 'false'

# Window mode can be turned on so that the default layout
# Has all the windows listed rather than sessions only
set -g @sessionx-window-mode 'on'

# Preview location and screenspace can be adjusted with these
# Reminder: it can be toggeled on/off with `?`
# set -g @sessionx-preview-location 'right'
# set -g @sessionx-preview-ratio '55%'

# Change window dimensions
# set -g @sessionx-window-height '90%'
# set -g @sessionx-window-width '75%'

# When set to 'on' a non-result will be sent to zoxide for path matching
# Requires zoxide installed
set -g @sessionx-zoxide-mode 'on'

# If you're running fzf lower than 0.35.0 there are a few missing features
# Upgrade, or use this setting for support
# set -g @sessionx-legacy-fzf-support 'on'

# ---------------------tmux-sessionx Mapping-----------------------
# Configuring Key Bindings:
# I've remapped these commands to 'alt'.
# To modify default key bindings, you can use these configuration options:

# This command is equivalent to the 'Enter' key.
# set -g @sessionx-bind-accept 'alt-j'

# This command opens the current window list.
# By default, it is set to `C-w`.
# set -g @sessionx-bind-window-mode 'alt-s'

# This command opens the tree.
# By default, it is set to `C-t`.
# set -g @sessionx-bind-tree-mode 'alt-w'

# This command opens the configuration path.
# By default, it is set to `C-x`.
# set -g @sessionx-bind-new-window 'alt-c'

# By default, it is set to `C-r`.
# set -g @sessionx-bind-read 'alt-r'

# This command rebinds scrolling up/down inside the preview.
# set -g @sessionx-bind-scroll-up 'C-u'
# set -g @sessionx-bind-scroll-down 'C-d'

# Sessionx Commands:
# These commands are used within sessionx when it's open.

# This command is equivalent to killing the selected session.
# set -g @sessionx-bind-kill-session 'alt-x'

# This command opens the configuration path.
# set -g @sessionx-bind-configuration-path 'alt-e'

# This command goes back to the previous command.
# set -g @sessionx-bind-back 'alt-h'

# These commands are bindings to select arrows.
# set -g @sessionx-bind-select-up 'alt-k'
# set -g @sessionx-bind-select-down 'alt-j'

# These commands are bindings to delete characters.
# set -g @sessionx-bind-delete-char 'alt-p'

# These commands are bindings to exit sessionx.
# set -g @sessionx-bind-abort 'alt-q'


# -------------------------------------------------------------------------
# Initialize TPM (keep this line at the very bottom of your tmux.conf).
run -b '~/.tmux/plugins/tpm/tpm'
set-option -sg escape-time 10
