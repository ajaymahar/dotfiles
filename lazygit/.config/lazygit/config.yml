os:
  edit: 'nvim'

git:
  # branchLogCmd: "git log --graph --all --color=always --decorate --date=relative --oneline"
  # branchLogCmd: "git log --graph --abbrev-commit --decorate --format=format:'%C(bold cyan)%h%C(reset) ->%C(bold yellow)%d%C(reset) %C(white)%s%C(reset) %C(green)(%ar)%C(reset) %C(dim white)- %an%C(reset)'"
  branchLogCmd: "git log --abbrev-commit --decorate --format=format:'%C(bold cyan)[󰜘 %h]%C(reset) ->  %C(bold yellow)%d%C(reset) %C(white)%s%C(reset) %C(green)(%ar)%C(reset) %C(dim white) %C(blue)[  %an]%C(reset)'"
  paging:
    colorArg: always
    pager: delta --dark --paging=never
  overrideGpg: true
  commitPrefixes:
    dotfiles: # This is repository folder name
      pattern: "^\\w+\\/(\\w+-\\w+).*"
      replace: '[$1] '
  log:
    order: 'topo-order'
    showGraph: 'always'
    showWholeGraph: false

# How to define custom command for lazygit
# customCommands:
#   - key: "W"
#     description: "wip in progess"
#     command: 'git commit -m "wip: $(date +"%Y.%m.%d %H:%M:%S")"'
#     context: "files"

# theme-1
# gui: 
#   theme:
#     activeBorderColor:
#       - '#cba6f7'
#       - bold
#     inactiveBorderColor:
#       - '#a6adc8'
#     optionsTextColor:
#       - '#89b4fa'
#     selectedLineBgColor:
#       - '#313244'
#     cherryPickedCommitBgColor:
#       - '#45475a'
#     cherryPickedCommitFgColor:
#       - '#cba6f7'
#     unstagedChangesColor:
#       - '#f38ba8'
#     defaultFgColor:
#       - '#cdd6f4'
#     searchingActiveBorderColor:
#       - '#f9e2af'

# theme-2
# fall back theme in case terminal app not configured
gui:
  nerdFontsVersion: "3"
  splitDiff: 'auto'
  showFileIcons: true
  showFileTree: true
  border: 'rounded'
  animateExplosion: true
  theme:
    lightTheme: false
    # selectedLineBgColor:
    # - reverse
    # selectedRangeBgColor:
    # - reverse
    activeBorderColor:
      - "#a6e3a1" # Green
      # - '#91788E'
      - bold
    inactiveBorderColor:
      - "#cdd6f4" # Text
    optionsTextColor:
      - "#89b4fa" # Blue
    selectedLineBgColor:
      - "#313244" # Surface0
      # - reverse
    selectedRangeBgColor:
      - "#313244" # Surface0
      - reverse
    cherryPickedCommitBgColor:
      - "#94e2d5" # Teal
    cherryPickedCommitFgColor:
      - "#89b4fa" # Blue
    unstagedChangesColor:
      - red # Red

# theme-3
# gui:
#   theme:
#     activeBorderColor:
#       - '#f2cdcd'
#       - bold
#     inactiveBorderColor:
#       - '#a6adc8'
#     optionsTextColor:
#       - '#89b4fa'
#     selectedLineBgColor:
#       - '#313244'
#     cherryPickedCommitBgColor:
#       - '#45475a'
#     cherryPickedCommitFgColor:
#       - '#f2cdcd'
#     unstagedChangesColor:
#       - '#f38ba8'
#     defaultFgColor:
#       - '#cdd6f4'
#     searchingActiveBorderColor:
#       - '#f9e2af'


# os:
#   editCommand: 'nvim --server $NVIM_SERVER'
#   editCommandTemplate: "{{editor}} --remote-send '<C-\\><C-n>:5ToggleTerm<CR>:lua Edit({{filename}}, {{line}})<CR>'"
# git:
#   branchLogCmd: "git log --graph --color=always --abbrev-commit --decorate --date=relative --pretty=medium --oneline {{branchName}} --"
#   commitPrefixes:
#     my_project: # This is repository folder name
#       pattern: "^\\w+\\/(\\w+-\\w+).*"
#       replace: '[$1] '
#   paging:
#     colorArg: always
#     pager: delta --dark --paging=never
#     # useConfig: use
#   commit:
#     signOff: false
#   merging:
#     # only applicable to unix users
#     manualCommit: false
#     # extra args passed to `git merge`, e.g. --no-ff
#     args: ''
#   log:
#     # one of date-order, author-date-order, topo-order.
#     # topo-order makes it easier to read the git log graph, but commits may not
#     # appear chronologically. See https://git-scm.com/docs/git-log#_commit_ordering
#     order: 'topo-order'
#     # one of always, never, when-maximised
#     # this determines whether the git graph is rendered in the commits panel
#     showGraph: 'when-maximised'
#     # displays the whole git graph by default in the commits panel (equivalent to passing the `--all` argument to `git log`)
#     showWholeGraph: false
#   skipHookPrefix: WIP
#   autoFetch: true
#   autoRefresh: true
#   allBranchesLogCmd: 'git log --graph --all --color=always --abbrev-commit --decorate --date=relative  --pretty=medium'
#   overrideGpg: false # prevents lazygit from spawning a separate process when using GPG
#   disableForcePushing: false
#   parseEmoji: false
#   diffContextSize: 3 # how many lines of context are shown around a change in diffs
#



